'use strict';var express = require('express');var bodyParser = require('body-parser');var logger = require('morgan');var cookieParser = require('cookie-parser');var path = require('path');var session = require('express-session');var passport = require('passport');var LocalStrategy = require('passport-local').Strategy;var app = express();app.use(express.static('public'));//app.use(passport.initialize());app.use(bodyParser.json());app.use(bodyParser.urlencoded());app.use(logger('dev'));app.use(cookieParser());app.use(session({ secret: 'keyboard cat' }));app.use(passport.initialize());app.use(passport.session());app.use(express.static(path.join(__dirname, 'public')));app.use(function(req, res, next) {    if (req.user) {        res.cookie('user', JSON.stringify(req.user));    }    next();});passport.use('local', new LocalStrategy({ usernameField: 'username', passwordField: 'password', passReqToCallback : true }, function(username, password, done) {    console.log(username);    User.findOne({ username: username }, function(err, user) {        if (err) return done(err);        if (!user) return done(null, false, { message: 'Incorrect username.' });        if (!user.verifyPassword(password)) {            return done(null, false, { message: 'Incorrect password.' });        }        user.comparePassword(password, function(err, isMatch) {            if (err) return done(err);            if (isMatch) return done(null, user);            return done(null, false);        });    });}));passport.serializeUser(function(user, done) {    done(null, user.id);});passport.deserializeUser(function(id, done) {    User.findById(id, function(err, user) {        done(err, user);    });});var port = process.env.PORT || 8000;app.listen(port, function () {    require('./document')(app._router.stack);});require('./routes')(app);module.exports.app = app;function ensureAuthenticated(req, res, next) {    if (req.isAuthenticated()) next();    else res.send(401);}